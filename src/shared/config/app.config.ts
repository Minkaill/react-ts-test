/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */
const getEnvVar = (key: string, defaultValue: string = ''): string => {
  if (typeof window !== 'undefined') {
    // –í –±—Ä–∞—É–∑–µ—Ä–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞–ø—Ä—è–º—É—é
    return defaultValue;
  }
  
  try {
    return (globalThis as any).process?.env?.[key] || defaultValue;
  } catch {
    return defaultValue;
  }
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º –≤ —á–∏—Å–ª–æ
 */
const getEnvNumber = (key: string, defaultValue: number): number => {
  const value = getEnvVar(key);
  const parsed = parseInt(value, 10);
  return isNaN(parsed) ? defaultValue : parsed;
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º –≤ boolean
 */
const getEnvBoolean = (key: string, defaultValue: boolean): boolean => {
  const value = getEnvVar(key).toLowerCase();
  if (value === 'true' || value === '1') return true;
  if (value === 'false' || value === '0') return false;
  return defaultValue;
};

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–∂–∏–º–æ–≤ –æ–∫—Ä—É–∂–µ–Ω–∏—è
const environment = getEnvVar('NODE_ENV', 'development');
const isDevelopment = environment === 'development';
const isProduction = environment === 'production';
const isTest = environment === 'test';

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω—ã –∏ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
 */
export const APP_CONFIG = {
  // API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  api: {
    baseUrl: getEnvVar('REACT_APP_API_URL', isDevelopment ? 'http://localhost:8000/api' : ''),
    timeout: getEnvNumber('REACT_APP_API_TIMEOUT', 10000),
    retryAttempts: 3,
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json',
    },
  },

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  app: {
    name: getEnvVar('REACT_APP_NAME', 'React TS Boilerplate'),
    version: getEnvVar('REACT_APP_VERSION', '1.0.0'),
    environment,
    isDevelopment,
    isProduction,
    isTest,
    port: getEnvNumber('PORT', 3000),
  },

  // UI –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
  ui: {
    breakpoints: {
      xs: 0,
      sm: 576,
      md: 768,
      lg: 992,
      xl: 1200,
      xxl: 1400,
    },
    animations: {
      duration: {
        fast: 150,
        normal: 300,
        slow: 500,
      },
      easing: 'cubic-bezier(0.4, 0, 0.2, 1)',
    },
    grid: {
      containerMaxWidth: 1400,
      gutterWidth: 20,
    },
    theme: {
      primaryColor: '#007bff',
      secondaryColor: '#6c757d',
      successColor: '#28a745',
      dangerColor: '#dc3545',
      warningColor: '#ffc107',
      infoColor: '#17a2b8',
    },
  },

  // –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
  features: {
    enableAnalytics: getEnvBoolean('REACT_APP_ENABLE_ANALYTICS', false),
    enableErrorReporting: getEnvBoolean('REACT_APP_ENABLE_ERROR_REPORTING', true),
    enableDevTools: getEnvBoolean('REACT_APP_ENABLE_DEV_TOOLS', isDevelopment),
    enableServiceWorker: isProduction,
    enableHotReload: isDevelopment,
  },

  // –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞
  business: {
    currency: {
      default: getEnvVar('REACT_APP_DEFAULT_CURRENCY', 'USD'),
      symbol: getEnvVar('REACT_APP_CURRENCY_SYMBOL', '$'),
      precision: 2,
    },
    pagination: {
      defaultPageSize: getEnvNumber('REACT_APP_DEFAULT_PAGE_SIZE', 12),
      maxPageSize: getEnvNumber('REACT_APP_MAX_PAGE_SIZE', 100),
      pageSizeOptions: [12, 24, 48, 96],
    },
    cart: {
      maxItems: getEnvNumber('REACT_APP_MAX_CART_ITEMS', 99),
      sessionTimeout: 30 * 60 * 1000, // 30 –º–∏–Ω—É—Ç
      autoSaveInterval: 5 * 60 * 1000, // 5 –º–∏–Ω—É—Ç
    },
    validation: {
      minPasswordLength: 8,
      maxFileSize: 10 * 1024 * 1024, // 10MB
      allowedImageTypes: ['image/jpeg', 'image/png', 'image/webp'],
    },
  },

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±–æ—Ä–∫–∏ –∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
  build: {
    generateSourceMap: getEnvBoolean('GENERATE_SOURCEMAP', isDevelopment),
    bundleAnalyzer: getEnvBoolean('ANALYZE_BUNDLE', false),
    publicPath: getEnvVar('PUBLIC_PATH', '/'),
  },
} as const;

// –≠–∫—Å–ø–æ—Ä—Ç —Ç–∏–ø–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
export type AppConfig = typeof APP_CONFIG;
export type Environment = typeof APP_CONFIG.app.environment;
export type ApiConfig = typeof APP_CONFIG.api;
export type UIConfig = typeof APP_CONFIG.ui;
export type FeaturesConfig = typeof APP_CONFIG.features;
export type BusinessConfig = typeof APP_CONFIG.business;

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
export const config = {
  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è
   */
  isFeatureEnabled: (feature: keyof typeof APP_CONFIG.features): boolean => {
    return APP_CONFIG.features[feature];
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ URL API —Å –ø—É—Ç–µ–º
   */
  getApiUrl: (path: string = ''): string => {
    const baseUrl = APP_CONFIG.api.baseUrl;
    if (!baseUrl) return path;
    return `${baseUrl.replace(/\/$/, '')}/${path.replace(/^\//, '')}`;
  },

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ breakpoint –∑–Ω–∞—á–µ–Ω–∏—è
   */
  getBreakpoint: (size: keyof typeof APP_CONFIG.ui.breakpoints): number => {
    return APP_CONFIG.ui.breakpoints[size];
  },

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã
   */
  formatCurrency: (amount: number): string => {
    const { symbol, precision } = APP_CONFIG.business.currency;
    return `${symbol}${amount.toFixed(precision)}`;
  },
};

// –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ development —Ä–µ–∂–∏–º–µ
if (isDevelopment) {
  const requiredEnvVars = ['REACT_APP_API_URL'];
  const missingVars = requiredEnvVars.filter(varName => !getEnvVar(varName));
  
  if (missingVars.length > 0) {
    console.warn('‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', missingVars);
  }
  
  console.log('üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞:', {
    environment: APP_CONFIG.app.environment,
    apiUrl: APP_CONFIG.api.baseUrl,
    features: APP_CONFIG.features,
  });
} 